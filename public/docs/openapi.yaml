openapi: 3.0.3
info:
    title: 'E-DMS App API Documentation'
    description: 'E-DMS App API Documentation'
    version: 1.0.0
servers:
    -
        url: 'http://localhost'
paths:
    /api/login:
        post:
            summary: 'Handle a login request to the application.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Auth
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    description: 'The value must be a valid email address.'
                                    example: jhettinger@example.com
                                secret:
                                    type: string
                                    description: ''
                                    example: {  }
                                password:
                                    type: string
                                    description: ''
                                    example: enim
                            required:
                                - email
                                - password
            security: []
    /api/logout:
        post:
            summary: 'Log the user out of the application.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Auth
            security: []
        get:
            summary: 'Log the user out of the application.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    success: true
                                    data: []
                                    message: 'Successful Logout'
                                properties:
                                    success: { type: boolean, example: true }
                                    data: { type: array, example: [] }
                                    message: { type: string, example: 'Successful Logout' }
            tags:
                - Auth
            security: []
    /api/register:
        post:
            summary: 'Handle a registration request for the application.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Auth
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                first_name:
                                    type: string
                                    description: ''
                                    example: vel
                                last_name:
                                    type: string
                                    description: ''
                                    example: voluptatem
                                company_name:
                                    type: string
                                    description: ''
                                    example: sit
                                company_phone:
                                    type: string
                                    description: ''
                                    example: aut
                                company_description:
                                    type: string
                                    description: ''
                                    example: quaerat
                                has2fa:
                                    type: boolean
                                    description: ''
                                    example: false
                                email:
                                    type: string
                                    description: 'The value must be a valid email address.'
                                    example: elissa.prosacco@example.com
                                password:
                                    type: string
                                    description: ''
                                    example: asperiores
                                password_confirmation:
                                    type: string
                                    description: ''
                                    example: voluptatibus
                            required:
                                - first_name
                                - last_name
                                - company_name
                                - company_phone
                                - email
                                - password
                                - password_confirmation
            security: []
    /api/password/email:
        post:
            summary: 'Send a reset link to the given user.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Auth
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    description: 'The value must be a valid email address.'
                                    example: cole.demond@example.net
                            required:
                                - email
            security: []
        get:
            summary: 'Display the form to request a password reset link.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <title>E-DMS</title>\n\n    <!-- Tell the browser to be responsive to screen width -->\n    <meta content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\" name=\"viewport\">\n\n    <!-- Bootstrap 3.3.7 -->\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\n\n    <!-- Font Awesome -->\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n\n    <!-- Ionicons -->\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/ionicons/2.0.1/css/ionicons.min.css\">\n\n    <!-- Theme style -->\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/admin-lte/2.4.3/css/AdminLTE.min.css\">\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/admin-lte/2.4.3/css/skins/_all-skins.min.css\">\n\n    <!-- iCheck -->\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/iCheck/1.0.2/skins/square/_all.css\">\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n    <script src=\"https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js\"></script>\n    <script src=\"https://oss.maxcdn.com/respond/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n</head>\n<body class=\"hold-transition login-page\">\n<div class=\"login-box\">\n    <div class=\"login-logo\">\n        <a href=\"http://localhost/home\"><b>InfyOm </b>Generator</a>\n    </div>\n\n    <!-- /.login-logo -->\n    <div class=\"login-box-body\">\n        <p class=\"login-box-msg\">Enter Email to reset password</p>\n\n        \n        <form method=\"post\" action=\"http://localhost/password/email\">\n            <input type=\"hidden\" name=\"_token\" value=\"nXp2bgB0L3lREnuvgocfqafnmRtF2e1PfSufM6qR\">\n            <div class=\"form-group has-feedback \">\n                <input type=\"email\" class=\"form-control\" name=\"email\" value=\"\" placeholder=\"Email\">\n                <span class=\"glyphicon glyphicon-envelope form-control-feedback\"></span>\n                            </div>\n\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <button type=\"submit\" class=\"btn btn-primary pull-right\">\n                        <i class=\"fa fa-btn fa-envelope\"></i> Send Password Reset Link\n                    </button>\n                </div>\n            </div>\n\n        </form>\n\n    </div>\n    <!-- /.login-box-body -->\n</div>\n<!-- /.login-box -->\n\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\n\n<!-- AdminLTE App -->\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/admin-lte/2.4.3/js/adminlte.min.js\"></script>\n\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/iCheck/1.0.2/icheck.min.js\"></script>\n</body>\n</html>\n"
            tags:
                - Auth
            security: []
    '/api/password/reset/{token}':
        get:
            summary: 'Display the password reset view for the given token.'
            description: 'If no token is present, display the link request form.'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <title>E-DMS</title>\n\n    <!-- Tell the browser to be responsive to screen width -->\n    <meta content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\" name=\"viewport\">\n\n    <!-- Bootstrap 3.3.7 -->\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\n\n    <!-- Font Awesome -->\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n\n    <!-- Ionicons -->\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/ionicons/2.0.1/css/ionicons.min.css\">\n\n    <!-- Theme style -->\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/admin-lte/2.4.3/css/AdminLTE.min.css\">\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/admin-lte/2.4.3/css/skins/_all-skins.min.css\">\n\n    <!-- iCheck -->\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/iCheck/1.0.2/skins/square/_all.css\">\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n    <script src=\"https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js\"></script>\n    <script src=\"https://oss.maxcdn.com/respond/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n</head>\n<body class=\"hold-transition login-page\">\n<div class=\"login-box\">\n    <div class=\"login-logo\">\n        <a href=\"http://localhost/home\"><b>InfyOm </b>Generator</a>\n    </div>\n\n    <!-- /.login-logo -->\n    <div class=\"login-box-body\">\n        <p class=\"login-box-msg\">Reset your password</p>\n\n        <form method=\"post\" action=\"http://localhost/password/reset\">\n            <input type=\"hidden\" name=\"_token\" value=\"nXp2bgB0L3lREnuvgocfqafnmRtF2e1PfSufM6qR\">\n            <input type=\"hidden\" name=\"token\" value=\"quisquam\">\n\n            <div class=\"form-group has-feedback \">\n                <input type=\"email\" class=\"form-control\" name=\"email\" value=\"\" placeholder=\"Email\">\n                <span class=\"glyphicon glyphicon-envelope form-control-feedback\"></span>\n                            </div>\n\n            <div class=\"form-group has-feedback\">\n                <input type=\"password\" class=\"form-control\" name=\"password\" placeholder=\"Password\">\n                <span class=\"glyphicon glyphicon-lock form-control-feedback\"></span>\n\n                            </div>\n\n            <div class=\"form-group has-feedback\">\n                <input type=\"password\" name=\"password_confirmation\" class=\"form-control\" placeholder=\"Confirm password\">\n                <span class=\"glyphicon glyphicon-lock form-control-feedback\"></span>\n\n                            </div>\n\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <button type=\"submit\" class=\"btn btn-primary pull-right\">\n                        <i class=\"fa fa-btn fa-refresh\"></i>Reset Password\n                    </button>\n                </div>\n            </div>\n        </form>\n\n    </div>\n</div>\n\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\n\n<!-- AdminLTE App -->\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/admin-lte/2.4.3/js/adminlte.min.js\"></script>\n\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/iCheck/1.0.2/icheck.min.js\"></script>\n<script>\n    $(function () {\n        $('input').iCheck({\n            checkboxClass: 'icheckbox_square-blue',\n            radioClass: 'iradio_square-blue',\n            increaseArea: '20%' // optional\n        });\n    });\n</script>\n</body>\n</html>\n"
            tags:
                - Auth
            security: []
        parameters:
            -
                in: path
                name: token
                description: ''
                example: quisquam
                required: true
                schema:
                    type: string
    /api/password/confirm:
        post:
            summary: 'Confirm the given user''s password.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Auth
            security: []
    '/api/email/verify/{id}/{hash}':
        get:
            summary: 'Mark the authenticated user''s email address as verified.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Auth
            security: []
        parameters:
            -
                in: path
                name: id
                description: ''
                example: deleniti
                required: true
                schema:
                    type: string
            -
                in: path
                name: hash
                description: ''
                example: quia
                required: true
                schema:
                    type: string
    /api/email/resend:
        post:
            summary: 'Resend the email verification notification.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Auth
            security: []
    /api/password/change:
        post:
            summary: 'Change user''s password.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Auth
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    description: 'The value must be a valid email address.'
                                    example: maximo.robel@example.com
                                old_password:
                                    type: string
                                    description: ''
                                    example: consequatur
                                password:
                                    type: string
                                    description: ''
                                    example: officiis
                            required:
                                - email
                                - old_password
                                - password
            security: []
    /api/invite:
        post:
            summary: 'Sends Invitation to Register.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Auth
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                company_id:
                                    type: string
                                    description: ''
                                    example: ab
                                email:
                                    type: string
                                    description: 'The value must be a valid email address.'
                                    example: lucile.roob@example.org
                            required:
                                - company_id
                                - email
            security: []
    /api/delete:
        post:
            summary: 'Delete Current User Profile'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Auth
            security: []
    /api/registerInvite:
        post:
            summary: 'This is used to register an invited user'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Auth
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                company_id:
                                    type: string
                                    description: ''
                                    example: ut
                                user_id:
                                    type: string
                                    description: ''
                                    example: {  }
                                is_user:
                                    type: string
                                    description: ''
                                    example: {  }
                                name:
                                    type: string
                                    description: ''
                                    example: ea
                                has2fa:
                                    type: boolean
                                    description: ''
                                    example: false
                                email:
                                    type: string
                                    description: 'The value must be a valid email address.'
                                    example: nconn@example.org
                                password:
                                    type: string
                                    description: ''
                                    example: in
                                password_confirmation:
                                    type: string
                                    description: ''
                                    example: dolores
                            required:
                                - company_id
                                - email
                                - password
                                - password_confirmation
            security: []
    /api/companies:
        get:
            summary: 'Display a listing of the Company.'
            description: 'GET|HEAD /companies'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Company
            security: []
        post:
            summary: 'Store a newly created Company in storage.'
            description: 'POST /companies'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Company
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    description: ''
                                    example: illum
                                description:
                                    type: string
                                    description: ''
                                    example: et
                                email:
                                    type: string
                                    description: ''
                                    example: ipsam
                                phone:
                                    type: string
                                    description: ''
                                    example: facilis
                            required:
                                - name
            security: []
    '/api/companies/{company}':
        get:
            summary: 'Display the specified Company.'
            description: 'GET|HEAD /companies/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Company
            security: []
        put:
            summary: 'Update the specified Company in storage.'
            description: 'PUT/PATCH /companies/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Company
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    description: ''
                                    example: deleniti
                                description:
                                    type: string
                                    description: ''
                                    example: illo
                                email:
                                    type: string
                                    description: ''
                                    example: sed
                                phone:
                                    type: string
                                    description: ''
                                    example: labore
                            required:
                                - name
            security: []
        delete:
            summary: 'Remove the specified Company from storage.'
            description: 'DELETE /companies/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Company
            security: []
        parameters:
            -
                in: path
                name: company
                description: ''
                example: omnis
                required: true
                schema:
                    type: string
    /oauth/authorize:
        get:
            summary: 'Authorize a client to access the user''s account.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Endpoints
            security: []
        post:
            summary: 'Approve the authorization request.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            security: []
        delete:
            summary: 'Deny the authorization request.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            security: []
    /oauth/token:
        post:
            summary: 'Authorize a client to access the user''s account.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            security: []
    /oauth/tokens:
        get:
            summary: 'Get all of the authorized tokens for the authenticated user.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Endpoints
            security: []
    '/oauth/tokens/{token_id}':
        delete:
            summary: 'Delete the given token.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            security: []
        parameters:
            -
                in: path
                name: token_id
                description: ''
                example: magni
                required: true
                schema:
                    type: string
    /oauth/token/refresh:
        post:
            summary: 'Get a fresh transient token cookie for the authenticated user.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            security: []
    /oauth/clients:
        get:
            summary: 'Get all of the clients for the authenticated user.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Endpoints
            security: []
        post:
            summary: 'Store a new client.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            security: []
    '/oauth/clients/{client_id}':
        put:
            summary: 'Update the given client.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            security: []
        delete:
            summary: 'Delete the given client.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            security: []
        parameters:
            -
                in: path
                name: client_id
                description: ''
                example: et
                required: true
                schema:
                    type: string
    /oauth/scopes:
        get:
            summary: 'Get all of the available scopes for the application.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Endpoints
            security: []
    /oauth/personal-access-tokens:
        get:
            summary: 'Get all of the personal access tokens for the authenticated user.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Endpoints
            security: []
        post:
            summary: 'Create a new personal access token for the user.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            security: []
    '/oauth/personal-access-tokens/{token_id}':
        delete:
            summary: 'Delete the given token.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            security: []
        parameters:
            -
                in: path
                name: token_id
                description: ''
                example: repellat
                required: true
                schema:
                    type: string
    /api/user:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Endpoints
            security: []
    /:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Endpoints
            security: []
    /home:
        get:
            summary: 'Show the application dashboard.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Endpoints
            security: []
    /api/files:
        get:
            summary: 'Display a listing of the File.'
            description: 'GET|HEAD /files'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - File
            security: []
        post:
            summary: 'Store a newly created File in storage.'
            description: 'POST /files'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - File
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    description: ''
                                    example: consequatur
                                is_favourite:
                                    type: boolean
                                    description: ''
                                    example: false
                                is_lock:
                                    type: boolean
                                    description: ''
                                    example: false
                                folder_id:
                                    type: string
                                    description: ''
                                    example: et
                            required:
                                - name
                                - folder_id
            security: []
    '/api/files/{file}':
        get:
            summary: 'Display the specified File.'
            description: 'GET|HEAD /files/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - File
            security: []
        put:
            summary: 'Update the specified File in storage.'
            description: 'PUT/PATCH /files/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - File
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    description: ''
                                    example: labore
                                is_favourite:
                                    type: boolean
                                    description: ''
                                    example: false
                                is_lock:
                                    type: boolean
                                    description: ''
                                    example: false
                                folder_id:
                                    type: string
                                    description: ''
                                    example: est
                            required:
                                - name
                                - folder_id
            security: []
        delete:
            summary: 'Remove the specified File from storage.'
            description: 'DELETE /files/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - File
            security: []
        parameters:
            -
                in: path
                name: file
                description: ''
                example: doloremque
                required: true
                schema:
                    type: string
    /api/files/validate:
        post:
            summary: 'Validate File''s password.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - File
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                password:
                                    type: string
                                    description: ''
                                    example: animi
                                file_id:
                                    type: string
                                    description: ''
                                    example: et
                            required:
                                - password
                                - file_id
            security: []
    /api/files/moveFile:
        post:
            summary: 'Move file to another folder.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - File
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                file_id:
                                    type: string
                                    description: ''
                                    example: consequatur
                                from_folder_id:
                                    type: string
                                    description: ''
                                    example: qui
                                to_folder_id:
                                    type: string
                                    description: ''
                                    example: beatae
                            required:
                                - file_id
                                - from_folder_id
                                - to_folder_id
            security: []
    /api/files/copyFile:
        post:
            summary: 'Copy file to another folder.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - File
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                file_id:
                                    type: string
                                    description: ''
                                    example: quod
                                folder_id:
                                    type: string
                                    description: ''
                                    example: accusamus
                            required:
                                - file_id
                                - folder_id
            security: []
    '/api/files/byFolder/{id}':
        get:
            summary: 'Get All Files By Folder.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - File
            security: []
        parameters:
            -
                in: path
                name: id
                description: ''
                example: unde
                required: true
                schema:
                    type: string
    /api/file_comments:
        get:
            summary: 'Display a listing of the FileComment.'
            description: 'GET|HEAD /fileComments'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - 'File Comment'
            security: []
        post:
            summary: 'Store a newly created FileComment in storage.'
            description: 'POST /fileComments'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'File Comment'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                file_id:
                                    type: integer
                                    description: ''
                                    example: 6
                                comment:
                                    type: string
                                    description: ''
                                    example: id
                            required:
                                - file_id
                                - comment
            security: []
    '/api/file_comments/{file_comment}':
        get:
            summary: 'Display the specified FileComment.'
            description: 'GET|HEAD /fileComments/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - 'File Comment'
            security: []
        put:
            summary: 'Update the specified FileComment in storage.'
            description: 'PUT/PATCH /fileComments/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'File Comment'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                file_id:
                                    type: integer
                                    description: ''
                                    example: 8
                                comment:
                                    type: string
                                    description: ''
                                    example: laborum
                            required:
                                - file_id
                                - comment
            security: []
        delete:
            summary: 'Remove the specified FileComment from storage.'
            description: 'DELETE /fileComments/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'File Comment'
            security: []
        parameters:
            -
                in: path
                name: file_comment
                description: ''
                example: quia
                required: true
                schema:
                    type: string
    /api/file_tags:
        get:
            summary: 'Display a listing of the FileTag.'
            description: 'GET|HEAD /fileTags'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - 'File Tag'
            security: []
        post:
            summary: 'Store a newly created FileTag in storage.'
            description: 'POST /fileTags'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'File Tag'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                file_id:
                                    type: integer
                                    description: ''
                                    example: 18
                                tag_id:
                                    type: integer
                                    description: ''
                                    example: 14
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
                            required:
                                - file_id
                                - tag_id
            security: []
    '/api/file_tags/{file_tag}':
        get:
            summary: 'Display the specified FileTag.'
            description: 'GET|HEAD /fileTags/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - 'File Tag'
            security: []
        put:
            summary: 'Update the specified FileTag in storage.'
            description: 'PUT/PATCH /fileTags/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'File Tag'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                file_id:
                                    type: integer
                                    description: ''
                                    example: 17
                                tag_id:
                                    type: integer
                                    description: ''
                                    example: 10
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
                            required:
                                - file_id
                                - tag_id
            security: []
        delete:
            summary: 'Remove the specified FileTag from storage.'
            description: 'DELETE /fileTags/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'File Tag'
            security: []
        parameters:
            -
                in: path
                name: file_tag
                description: ''
                example: laudantium
                required: true
                schema:
                    type: string
    /api/folders:
        get:
            summary: 'Display a listing of the Folder.'
            description: 'GET|HEAD /folders'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Folder
            security: []
        post:
            summary: 'Store a newly created Folder in storage.'
            description: 'POST /folders'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Folder
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    description: ''
                                    example: vel
                                library_id:
                                    type: string
                                    description: ''
                                    example: incidunt
                                parent_id:
                                    type: integer
                                    description: ''
                                    example: 19
                            required:
                                - name
                                - library_id
            security: []
    '/api/folders/{folder}':
        get:
            summary: 'Display the specified Folder.'
            description: 'GET|HEAD /folders/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Folder
            security: []
        put:
            summary: 'Update the specified Folder in storage.'
            description: 'PUT/PATCH /folders/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Folder
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    description: ''
                                    example: sint
                                parent_id:
                                    type: integer
                                    description: ''
                                    example: 15
                            required:
                                - name
            security: []
        delete:
            summary: 'Remove the specified Folder from storage.'
            description: 'DELETE /folders/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Folder
            security: []
        parameters:
            -
                in: path
                name: folder
                description: ''
                example: animi
                required: true
                schema:
                    type: string
    /api/folder_files:
        get:
            summary: 'Display a listing of the FolderFile.'
            description: 'GET|HEAD /folderFiles'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - 'Folder File'
            security: []
        post:
            summary: 'Store a newly created FolderFile in storage.'
            description: 'POST /folderFiles'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Folder File'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                file_id:
                                    type: integer
                                    description: ''
                                    example: 3
                                folder_id:
                                    type: integer
                                    description: ''
                                    example: 10
                            required:
                                - file_id
                                - folder_id
            security: []
    '/api/folder_files/{folder_file}':
        get:
            summary: 'Display the specified FolderFile.'
            description: 'GET|HEAD /folderFiles/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - 'Folder File'
            security: []
        put:
            summary: 'Update the specified FolderFile in storage.'
            description: 'PUT/PATCH /folderFiles/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Folder File'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                file_id:
                                    type: integer
                                    description: ''
                                    example: 7
                                folder_id:
                                    type: integer
                                    description: ''
                                    example: 13
                            required:
                                - file_id
                                - folder_id
            security: []
        delete:
            summary: 'Remove the specified FolderFile from storage.'
            description: 'DELETE /folderFiles/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Folder File'
            security: []
        parameters:
            -
                in: path
                name: folder_file
                description: ''
                example: quia
                required: true
                schema:
                    type: string
    /api/folder_tags:
        get:
            summary: 'Display a listing of the FolderTag.'
            description: 'GET|HEAD /folderTags'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - 'Folder Tag'
            security: []
        post:
            summary: 'Store a newly created FolderTag in storage.'
            description: 'POST /folderTags'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Folder Tag'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                folder_id:
                                    type: integer
                                    description: ''
                                    example: 3
                                tag_id:
                                    type: integer
                                    description: ''
                                    example: 19
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
                            required:
                                - folder_id
                                - tag_id
            security: []
    '/api/folder_tags/{folder_tag}':
        get:
            summary: 'Display the specified FolderTag.'
            description: 'GET|HEAD /folderTags/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - 'Folder Tag'
            security: []
        put:
            summary: 'Update the specified FolderTag in storage.'
            description: 'PUT/PATCH /folderTags/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Folder Tag'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                folder_id:
                                    type: integer
                                    description: ''
                                    example: 13
                                tag_id:
                                    type: integer
                                    description: ''
                                    example: 12
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
                            required:
                                - folder_id
                                - tag_id
            security: []
        delete:
            summary: 'Remove the specified FolderTag from storage.'
            description: 'DELETE /folderTags/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Folder Tag'
            security: []
        parameters:
            -
                in: path
                name: folder_tag
                description: ''
                example: et
                required: true
                schema:
                    type: string
    /api/groups/byUser:
        get:
            summary: 'Get All Groups for a User.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Group
            security: []
    /api/groups/otherGroup:
        get:
            summary: 'Get All Other Groups.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Group
            security: []
    '/api/groups/allUsersInGroup/{id}':
        get:
            summary: 'Get All Users in a Group.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Group
            security: []
        parameters:
            -
                in: path
                name: id
                description: ''
                example: eum
                required: true
                schema:
                    type: string
    /api/groups/myGroup:
        get:
            summary: 'Get All My Groups.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Group
            security: []
    /api/groups:
        get:
            summary: 'Display a listing of the Group.'
            description: 'GET|HEAD /groups'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Group
            security: []
        post:
            summary: 'Store a newly created Group in storage.'
            description: 'POST /groups'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Group
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    description: ''
                                    example: porro
                                description:
                                    type: string
                                    description: ''
                                    example: unde
                            required:
                                - name
            security: []
    '/api/groups/{group}':
        get:
            summary: 'Display the specified Group.'
            description: 'GET|HEAD /groups/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Group
            security: []
        put:
            summary: 'Update the specified Group in storage.'
            description: 'PUT/PATCH /groups/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Group
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    description: ''
                                    example: adipisci
                                description:
                                    type: string
                                    description: ''
                                    example: perferendis
                            required:
                                - name
            security: []
        delete:
            summary: 'Remove the specified Group from storage.'
            description: 'DELETE /groups/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Group
            security: []
        parameters:
            -
                in: path
                name: group
                description: ''
                example: rerum
                required: true
                schema:
                    type: string
    /api/libraries/validate:
        post:
            summary: 'Validate Library''s password.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Library
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                password:
                                    type: string
                                    description: ''
                                    example: rerum
                                library_id:
                                    type: string
                                    description: ''
                                    example: nobis
                            required:
                                - password
                                - library_id
            security: []
    /api/libraries/shareToUser:
        post:
            summary: 'Share Library to User.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Library
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                library_id:
                                    type: string
                                    description: ''
                                    example: culpa
                                user_id:
                                    type: string
                                    description: ''
                                    example: qui
                                password:
                                    type: boolean
                                    description: ''
                                    example: false
                            required:
                                - library_id
                                - user_id
            security: []
    /api/libraries/shareToRole:
        post:
            summary: 'Share Library to Group.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Library
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                library_id:
                                    type: string
                                    description: ''
                                    example: quas
                                group_id:
                                    type: string
                                    description: ''
                                    example: et
                                password:
                                    type: boolean
                                    description: ''
                                    example: false
                            required:
                                - library_id
                                - group_id
            security: []
    /api/libraries/myFavourites:
        get:
            summary: 'my Favourites.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Library
            security: []
    /api/libraries:
        get:
            summary: 'Display a listing of the Library.'
            description: 'GET|HEAD /libraries'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Library
            security: []
        post:
            summary: 'Store a newly created Library in storage.'
            description: 'POST /libraries'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Library
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    description: ''
                                    example: voluptas
                                description:
                                    type: string
                                    description: ''
                                    example: ex
                                password:
                                    type: string
                                    description: ''
                                    example: doloribus
                                is_encrypted:
                                    type: boolean
                                    description: ''
                                    example: false
                                is_favourite:
                                    type: boolean
                                    description: ''
                                    example: false
                            required:
                                - name
                                - is_encrypted
                                - is_favourite
            security: []
    '/api/libraries/{library}':
        get:
            summary: 'Display the specified Library.'
            description: 'GET|HEAD /libraries/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Library
            security: []
        put:
            summary: 'Update the specified Library in storage.'
            description: 'PUT/PATCH /libraries/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Library
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    description: ''
                                    example: voluptate
                                description:
                                    type: string
                                    description: ''
                                    example: quia
                                password:
                                    type: string
                                    description: ''
                                    example: quibusdam
                                company_id:
                                    type: integer
                                    description: ''
                                    example: 20
                                is_encrypted:
                                    type: boolean
                                    description: ''
                                    example: false
                                is_favourite:
                                    type: boolean
                                    description: ''
                                    example: false
                            required:
                                - name
                                - company_id
                                - is_encrypted
                                - is_favourite
            security: []
        delete:
            summary: 'Remove the specified Library from storage.'
            description: 'DELETE /libraries/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Library
            security: []
        parameters:
            -
                in: path
                name: library
                description: ''
                example: et
                required: true
                schema:
                    type: string
    /api/notification_types:
        get:
            summary: 'Display a listing of the NotificationType.'
            description: 'GET|HEAD /notificationTypes'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - 'Notification Type'
            security: []
        post:
            summary: 'Store a newly created NotificationType in storage.'
            description: 'POST /notificationTypes'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Notification Type'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    description: ''
                                    example: dolore
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
                            required:
                                - name
            security: []
    '/api/notification_types/{notification_type}':
        get:
            summary: 'Display the specified NotificationType.'
            description: 'GET|HEAD /notificationTypes/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - 'Notification Type'
            security: []
        put:
            summary: 'Update the specified NotificationType in storage.'
            description: 'PUT/PATCH /notificationTypes/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Notification Type'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    description: ''
                                    example: porro
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
                            required:
                                - name
            security: []
        delete:
            summary: 'Remove the specified NotificationType from storage.'
            description: 'DELETE /notificationTypes/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Notification Type'
            security: []
        parameters:
            -
                in: path
                name: notification_type
                description: ''
                example: sunt
                required: true
                schema:
                    type: string
    /api/notifications:
        get:
            summary: 'Display a listing of the Notifications.'
            description: 'GET|HEAD /notifications'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Notifications
            security: []
        post:
            summary: 'Store a newly created Notifications in storage.'
            description: 'POST /notifications'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Notifications
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                notification_type_id:
                                    type: integer
                                    description: ''
                                    example: 6
                                user_id:
                                    type: integer
                                    description: ''
                                    example: 5
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
                            required:
                                - notification_type_id
                                - user_id
            security: []
    '/api/notifications/{notification}':
        get:
            summary: 'Display the specified Notifications.'
            description: 'GET|HEAD /notifications/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Notifications
            security: []
        put:
            summary: 'Update the specified Notifications in storage.'
            description: 'PUT/PATCH /notifications/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Notifications
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                notification_type_id:
                                    type: integer
                                    description: ''
                                    example: 4
                                user_id:
                                    type: integer
                                    description: ''
                                    example: 11
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
                            required:
                                - notification_type_id
                                - user_id
            security: []
        delete:
            summary: 'Remove the specified Notifications from storage.'
            description: 'DELETE /notifications/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Notifications
            security: []
        parameters:
            -
                in: path
                name: notification
                description: ''
                example: unde
                required: true
                schema:
                    type: string
    /api/permissions/assign/user:
        post:
            summary: 'Assigns Permissions to User'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Permissions
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                user_id:
                                    type: string
                                    description: ''
                                    example: alias
                                permission_id:
                                    type: string
                                    description: ''
                                    example: eum
                            required:
                                - user_id
                                - permission_id
            security: []
    /api/permissions/assign/role:
        post:
            summary: 'Assigns Permissions to Role'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Permissions
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                role_id:
                                    type: string
                                    description: ''
                                    example: dolorem
                                permission_id:
                                    type: string
                                    description: ''
                                    example: nemo
                            required:
                                - role_id
                                - permission_id
            security: []
    /api/permissions:
        get:
            summary: 'Display a listing of the Permissions.'
            description: 'GET|HEAD /permissions'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Permissions
            security: []
        post:
            summary: 'Store a newly created Permissions in storage.'
            description: 'POST /permissions'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Permissions
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    description: ''
                                    example: ab
                                guard_name:
                                    type: string
                                    description: ''
                                    example: est
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
                            required:
                                - name
                                - guard_name
            security: []
    '/api/permissions/{permission}':
        get:
            summary: 'Display the specified Permissions.'
            description: 'GET|HEAD /permissions/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Permissions
            security: []
        put:
            summary: 'Update the specified Permissions in storage.'
            description: 'PUT/PATCH /permissions/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Permissions
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    description: ''
                                    example: dolorem
                                guard_name:
                                    type: string
                                    description: ''
                                    example: eum
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
                            required:
                                - name
                                - guard_name
            security: []
        delete:
            summary: 'Remove the specified Permissions from storage.'
            description: 'DELETE /permissions/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Permissions
            security: []
        parameters:
            -
                in: path
                name: permission
                description: ''
                example: voluptate
                required: true
                schema:
                    type: string
    /api/plans/subscribe:
        post:
            summary: 'Get Subscribe for a plan.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Plans
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                plan_id:
                                    type: string
                                    description: ''
                                    example: vel
                            required:
                                - plan_id
            security: []
    /api/plans/currentPlan:
        get:
            summary: 'Get Current plan user is subscribed to.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Plans
            security: []
    /api/plans:
        get:
            summary: 'Display a listing of the Plans.'
            description: 'GET|HEAD /plans'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Plans
            security: []
        post:
            summary: 'Store a newly created Plans in storage.'
            description: 'POST /plans'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Plans
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                slug:
                                    type: string
                                    description: ''
                                    example: enim
                                name:
                                    type: string
                                    description: ''
                                    example: recusandae
                                description:
                                    type: string
                                    description: ''
                                    example: dolores
                                is_active:
                                    type: boolean
                                    description: ''
                                    example: false
                                price:
                                    type: number
                                    description: ''
                                    example: 1487945.079051
                                signup_fee:
                                    type: number
                                    description: ''
                                    example: 10.187803
                                currency:
                                    type: string
                                    description: ''
                                    example: nesciunt
                                trial_period:
                                    type: integer
                                    description: ''
                                    example: 15
                                trial_interval:
                                    type: string
                                    description: 'The value must be one of <code>hour</code>, <code>day</code>, <code>week</code>, or <code>month</code>.'
                                    example: hour
                                invoice_period:
                                    type: integer
                                    description: ''
                                    example: 11
                                invoice_interval:
                                    type: string
                                    description: 'The value must be one of <code>hour</code>, <code>day</code>, <code>week</code>, or <code>month</code>.'
                                    example: day
                                grace_period:
                                    type: integer
                                    description: ''
                                    example: 13
                                grace_interval:
                                    type: string
                                    description: 'The value must be one of <code>hour</code>, <code>day</code>, <code>week</code>, or <code>month</code>.'
                                    example: day
                                sort_order:
                                    type: integer
                                    description: ''
                                    example: 8
                                prorate_day:
                                    type: integer
                                    description: ''
                                    example: 20
                                prorate_period:
                                    type: integer
                                    description: ''
                                    example: 13
                                prorate_extend_due:
                                    type: integer
                                    description: ''
                                    example: 1
                                active_subscribers_limit:
                                    type: integer
                                    description: ''
                                    example: 15
                            required:
                                - slug
                                - name
                                - price
                                - signup_fee
                                - currency
            security: []
    '/api/plans/{plan}':
        get:
            summary: 'Display the specified Plans.'
            description: 'GET|HEAD /plans/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Plans
            security: []
        put:
            summary: 'Update the specified Plans in storage.'
            description: 'PUT/PATCH /plans/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Plans
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                slug:
                                    type: string
                                    description: ''
                                    example: magnam
                                name:
                                    type: string
                                    description: ''
                                    example: molestias
                                description:
                                    type: string
                                    description: ''
                                    example: quod
                                is_active:
                                    type: boolean
                                    description: ''
                                    example: false
                                price:
                                    type: number
                                    description: ''
                                    example: 6.05
                                signup_fee:
                                    type: number
                                    description: ''
                                    example: 1270.603064
                                currency:
                                    type: string
                                    description: ''
                                    example: iste
                                trial_period:
                                    type: integer
                                    description: ''
                                    example: 2
                                trial_interval:
                                    type: string
                                    description: 'The value must be one of <code>hour</code>, <code>day</code>, <code>week</code>, or <code>month</code>.'
                                    example: hour
                                invoice_period:
                                    type: integer
                                    description: ''
                                    example: 13
                                invoice_interval:
                                    type: string
                                    description: 'The value must be one of <code>hour</code>, <code>day</code>, <code>week</code>, or <code>month</code>.'
                                    example: month
                                grace_period:
                                    type: integer
                                    description: ''
                                    example: 2
                                grace_interval:
                                    type: string
                                    description: 'The value must be one of <code>hour</code>, <code>day</code>, <code>week</code>, or <code>month</code>.'
                                    example: day
                                sort_order:
                                    type: integer
                                    description: ''
                                    example: 1
                                prorate_day:
                                    type: integer
                                    description: ''
                                    example: 15
                                prorate_period:
                                    type: integer
                                    description: ''
                                    example: 7
                                prorate_extend_due:
                                    type: integer
                                    description: ''
                                    example: 2
                                active_subscribers_limit:
                                    type: integer
                                    description: ''
                                    example: 16
                            required:
                                - slug
                                - name
                                - price
                                - signup_fee
                                - currency
            security: []
        delete:
            summary: 'Remove the specified Plans from storage.'
            description: 'DELETE /plans/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Plans
            security: []
        parameters:
            -
                in: path
                name: plan
                description: ''
                example: consectetur
                required: true
                schema:
                    type: string
    /api/profiles:
        get:
            summary: 'Display a listing of the Profile.'
            description: 'GET|HEAD /profiles'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Profile
            security: []
        post:
            summary: 'Store a newly created Profile in storage.'
            description: 'POST /profiles'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Profile
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                first_name:
                                    type: string
                                    description: ''
                                    example: quos
                                last_name:
                                    type: string
                                    description: ''
                                    example: quo
                                user_id:
                                    type: integer
                                    description: ''
                                    example: 12
                                avatar:
                                    type: string
                                    description: ''
                                    example: non
                            required:
                                - first_name
                                - last_name
                                - user_id
            security: []
    '/api/profiles/{profile}':
        get:
            summary: 'Display the specified Profile.'
            description: 'GET|HEAD /profiles/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Profile
            security: []
        put:
            summary: 'Update the specified Profile in storage.'
            description: 'PUT/PATCH /profiles/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Profile
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                first_name:
                                    type: string
                                    description: ''
                                    example: velit
                                last_name:
                                    type: string
                                    description: ''
                                    example: modi
                                user_id:
                                    type: integer
                                    description: ''
                                    example: 15
                            required:
                                - first_name
                                - last_name
                                - user_id
            security: []
        delete:
            summary: 'Remove the specified Profile from storage.'
            description: 'DELETE /profiles/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Profile
            security: []
        parameters:
            -
                in: path
                name: profile
                description: ''
                example: voluptas
                required: true
                schema:
                    type: string
    /api/roles:
        get:
            summary: 'Display a listing of the Roles.'
            description: 'GET|HEAD /roles'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Roles
            security: []
        post:
            summary: 'Store a newly created Roles in storage.'
            description: 'POST /roles'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Roles
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    description: ''
                                    example: rerum
                                guard_name:
                                    type: string
                                    description: ''
                                    example: nisi
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
                            required:
                                - name
                                - guard_name
            security: []
    '/api/roles/{role}':
        get:
            summary: 'Display the specified Roles.'
            description: 'GET|HEAD /roles/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Roles
            security: []
        put:
            summary: 'Update the specified Roles in storage.'
            description: 'PUT/PATCH /roles/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Roles
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    description: ''
                                    example: quidem
                                guard_name:
                                    type: string
                                    description: ''
                                    example: excepturi
                                created_at:
                                    type: string
                                    description: ''
                                    example: {  }
                                updated_at:
                                    type: string
                                    description: ''
                                    example: {  }
                            required:
                                - name
                                - guard_name
            security: []
        delete:
            summary: 'Remove the specified Roles from storage.'
            description: 'DELETE /roles/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Roles
            security: []
        parameters:
            -
                in: path
                name: role
                description: ''
                example: distinctio
                required: true
                schema:
                    type: string
    /api/settings:
        get:
            summary: 'Display a listing of the Setting.'
            description: 'GET|HEAD /settings'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Setting
            security: []
        post:
            summary: 'Store a newly created Setting in storage.'
            description: 'POST /settings'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Setting
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                type:
                                    type: string
                                    description: ''
                                    example: nemo
                                value:
                                    type: string
                                    description: ''
                                    example: odit
                                company_id:
                                    type: integer
                                    description: ''
                                    example: 13
                            required:
                                - company_id
            security: []
    '/api/settings/{setting}':
        get:
            summary: 'Display the specified Setting.'
            description: 'GET|HEAD /settings/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Setting
            security: []
        put:
            summary: 'Update the specified Setting in storage.'
            description: 'PUT/PATCH /settings/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Setting
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                type:
                                    type: string
                                    description: ''
                                    example: reiciendis
                                value:
                                    type: string
                                    description: ''
                                    example: nesciunt
                                company_id:
                                    type: integer
                                    description: ''
                                    example: 18
                            required:
                                - company_id
            security: []
        delete:
            summary: 'Remove the specified Setting from storage.'
            description: 'DELETE /settings/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Setting
            security: []
        parameters:
            -
                in: path
                name: setting
                description: ''
                example: sunt
                required: true
                schema:
                    type: string
    /api/tags:
        get:
            summary: 'Display a listing of the Tag.'
            description: 'GET|HEAD /tags'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Tag
            security: []
        post:
            summary: 'Store a newly created Tag in storage.'
            description: 'POST /tags'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Tag
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    description: ''
                                    example: minus
                                colour:
                                    type: string
                                    description: ''
                                    example: est
                                company_id:
                                    type: integer
                                    description: ''
                                    example: 18
                            required:
                                - name
                                - company_id
            security: []
    '/api/tags/{tag}':
        get:
            summary: 'Display the specified Tag.'
            description: 'GET|HEAD /tags/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - Tag
            security: []
        put:
            summary: 'Update the specified Tag in storage.'
            description: 'PUT/PATCH /tags/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Tag
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    description: ''
                                    example: architecto
                                colour:
                                    type: string
                                    description: ''
                                    example: repellat
                                company_id:
                                    type: integer
                                    description: ''
                                    example: 1
                            required:
                                - name
                                - company_id
            security: []
        delete:
            summary: 'Remove the specified Tag from storage.'
            description: 'DELETE /tags/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Tag
            security: []
        parameters:
            -
                in: path
                name: tag
                description: ''
                example: quia
                required: true
                schema:
                    type: string
    /api/users/myActivities:
        get:
            summary: 'My Activities.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - User
            security: []
    /api/users/shareToGroup:
        post:
            summary: 'Add User to Group.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - User
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                group_id:
                                    type: string
                                    description: ''
                                    example: quo
                                user_id:
                                    type: string
                                    description: ''
                                    example: eos
                            required:
                                - group_id
                                - user_id
            security: []
    /api/users/removeToGroup:
        post:
            summary: 'Remove User to Group.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - User
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                group_id:
                                    type: string
                                    description: ''
                                    example: nisi
                                user_id:
                                    type: string
                                    description: ''
                                    example: excepturi
                            required:
                                - group_id
                                - user_id
            security: []
    /api/users/shareGroupWithEmail:
        post:
            summary: 'Add User to Group with Comma seperated Email.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - User
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                group_id:
                                    type: string
                                    description: ''
                                    example: ipsum
                                email:
                                    type: string
                                    description: ''
                                    example: ab
                            required:
                                - group_id
                                - email
            security: []
    /api/users/removeGroupWithEmail:
        post:
            summary: 'Remove User to Group with Comma seperated Email.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - User
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                group_id:
                                    type: string
                                    description: ''
                                    example: a
                                email:
                                    type: string
                                    description: ''
                                    example: similique
                            required:
                                - group_id
                                - email
            security: []
    /api/users:
        get:
            summary: 'Display a listing of the User.'
            description: 'GET|HEAD /users'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - User
            security: []
    '/api/users/{user}':
        get:
            summary: 'Display the specified User.'
            description: 'GET|HEAD /users/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthorized
                                    status: 401
                                properties:
                                    message: { type: string, example: Unauthorized }
                                    status: { type: integer, example: 401 }
            tags:
                - User
            security: []
        delete:
            summary: 'Remove the specified User from storage.'
            description: 'DELETE /users/{id}'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - User
            security: []
        parameters:
            -
                in: path
                name: user
                description: ''
                example: doloribus
                required: true
                schema:
                    type: string
